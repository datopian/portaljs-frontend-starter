import type { InferGetServerSidePropsType } from "next";
import Head from "next/head";
import { useRouter } from "next/router";
import { useState } from "react";
import { SWRConfig, unstable_serialize } from "swr";
import Layout from "@/components/_shared/Layout";
import TopBar from "@/components/_shared/TopBar";
import { PackageSearchOptions } from "@portaljs/ckan";
import DatasetSearchForm from "@/components/dataset/search/DatasetSearchForm";
import DatasetSearchFilters from "@/components/dataset/search/DatasetSearchFilters";
import ListOfDatasets from "@/components/dataset/search/ListOfDatasets";
import { searchDatasets } from "@/lib/queries/dataset";
import { getAllGroups } from "@/lib/queries/groups";
import { getAllOrganizations } from "@/lib/queries/orgs";
import HeroSection from "@/components/_shared/HeroSection";
import { useTheme } from "@/components/theme/theme-provider";

const mainOrg = process.env.NEXT_PUBLIC_ORG;

export async function getStaticProps() {
  const search_result = await searchDatasets({
    offset: 0,
    limit: 5,
    tags: [],
    groups: [],
    orgs: [],
  });
  const groups = await getAllGroups({ detailed: true });
  const orgs = await getAllOrganizations({ detailed: true });
  return {
    props: {
      fallback: {
        [unstable_serialize([
          "package_search",
          {
            offset: 0,
            limit: 5,
            tags: [],
            groups: [],
            orgs: [],
          },
        ])]: search_result,
      },
      groups,
      orgs,
    },
    revalidate: 1800,
  };
}

export default function DatasetSearch({
  fallback,
  groups,
  orgs,
}: InferGetServerSidePropsType<typeof getStaticProps>): JSX.Element {
  const router = useRouter();
  const { q } = router.query;
  const [options, setOptions] = useState<PackageSearchOptions>({
    offset: 0,
    limit: 5,
    tags: [],
    groups: [],
    orgs: [],
    query: q as string,
  });
  const {
    theme: { styles },
  } = useTheme();
  return (
    <>
      <Head>
        <title>Datasets</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        <div className="grid grid-rows-searchpage-hero">
          <HeroSection />
          <section
            className={`grid row-start-3 row-span-2 col-span-full pt-4 `}
          >
            <div className={`custom-container ${styles.shadowMd}`}>
              <DatasetSearchForm
                options={options}
                orgs={orgs}
                groups={groups}
                setOptions={setOptions}
              />
            </div>
          </section>
        </div>
        <main className="custom-container">
          <article className="grid grid-cols-1 lg:grid-cols-9 lg:gap-x-2 xl:gap-x-12 pt-[30px] pb-[30px]">
            <div className="lg:col-span-3">
              <DatasetSearchFilters
                groups={groups}
                orgs={orgs}
                options={options}
                setOptions={setOptions}
              />
            </div>
            <div className="lg:col-span-6">
              <SWRConfig value={{ fallback }}>
                <ListOfDatasets options={options} setOptions={setOptions} />
              </SWRConfig>
            </div>
          </article>
        </main>
      </Layout>
    </>
  );
}
